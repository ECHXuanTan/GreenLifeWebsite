[{"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\index.js":"1","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\reportWebVitals.js":"2","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\App.js":"3","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\HomeScreen.js":"4","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\ProductScreen.js":"5","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\components\\Product.js":"6","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\components\\Rating.js":"7","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\utils.js":"8","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\components\\LoadingBox.js":"9","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\components\\MessageBox.js":"10","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\Store.js":"11","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\store.js":"12","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\CartScreen.js":"13","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\SigninScreen.js":"14","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\ShippingAddressScreen.js":"15","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\components\\CheckoutSteps.js":"16","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\SignupScreen.js":"17","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\PlaceOrderScreen.js":"18","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\OrderScreen.js":"19","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\services\\ghtk.js":"20","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\OrderHistoryScreen.js":"21","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\ProfileScreen.js":"22","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\components\\ChatBot.js":"23","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\components\\SearchBox.js":"24","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\SearchScreen.js":"25","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\components\\ProtectedRoute.js":"26","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\DashboardScreen.js":"27","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\components\\AdminRoute.js":"28"},{"size":907,"mtime":1690556348563,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1641034089000,"results":"31","hashOfConfig":"30"},{"size":8784,"mtime":1691227267304,"results":"32","hashOfConfig":"30"},{"size":2054,"mtime":1691176514924,"results":"33","hashOfConfig":"30"},{"size":4482,"mtime":1690013018588,"results":"34","hashOfConfig":"30"},{"size":1602,"mtime":1690013995540,"results":"35","hashOfConfig":"30"},{"size":1464,"mtime":1691180522420,"results":"36","hashOfConfig":"30"},{"size":161,"mtime":1689966286631,"results":"37","hashOfConfig":"30"},{"size":232,"mtime":1689966037139,"results":"38","hashOfConfig":"30"},{"size":169,"mtime":1689966064636,"results":"39","hashOfConfig":"30"},{"size":699,"mtime":1689966917616,"results":"40","hashOfConfig":"41"},{"size":2498,"mtime":1690053293994,"results":"42","hashOfConfig":"30"},{"size":4482,"mtime":1690014111780,"results":"43","hashOfConfig":"30"},{"size":2497,"mtime":1690047289786,"results":"44","hashOfConfig":"30"},{"size":3583,"mtime":1691062740339,"results":"45","hashOfConfig":"30"},{"size":455,"mtime":1691062740312,"results":"46","hashOfConfig":"30"},{"size":3259,"mtime":1690051137824,"results":"47","hashOfConfig":"30"},{"size":10392,"mtime":1691062740330,"results":"48","hashOfConfig":"30"},{"size":10731,"mtime":1691062740329,"results":"49","hashOfConfig":"30"},{"size":1118,"mtime":1690556348633,"results":"50","hashOfConfig":"30"},{"size":3139,"mtime":1691234270123,"results":"51","hashOfConfig":"30"},{"size":3344,"mtime":1691069616284,"results":"52","hashOfConfig":"30"},{"size":1082,"mtime":1691176567484,"results":"53","hashOfConfig":"30"},{"size":1069,"mtime":1691177663106,"results":"54","hashOfConfig":"30"},{"size":9726,"mtime":1691182078433,"results":"55","hashOfConfig":"30"},{"size":314,"mtime":1691225359473,"results":"56","hashOfConfig":"30"},{"size":4760,"mtime":1691233274734,"results":"57","hashOfConfig":"30"},{"size":330,"mtime":1691225354061,"results":"58","hashOfConfig":"30"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ddmg17",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dqrb9p",{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"65"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"65"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\index.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\reportWebVitals.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\App.js",[],["118","119"],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\HomeScreen.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\ProductScreen.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\components\\Product.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\components\\Rating.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\utils.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\components\\LoadingBox.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\components\\MessageBox.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\Store.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\store.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\CartScreen.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\SigninScreen.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\ShippingAddressScreen.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\components\\CheckoutSteps.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\SignupScreen.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\PlaceOrderScreen.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\OrderScreen.js",["120"],"import axios from 'axios';\r\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\r\nimport { PayPalButtons, usePayPalScriptReducer } from '@paypal/react-paypal-js';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Link } from 'react-router-dom';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { Store } from '../store';\r\nimport { getError } from '../utils';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'FETCH_REQUEST':\r\n      return { ...state, loading: true, error: '' };\r\n    case 'FETCH_SUCCESS':\r\n      return { ...state, loading: false, order: action.payload, error: '' };\r\n    case 'FETCH_FAIL':\r\n      return { ...state, loading: false, error: action.payload };\r\n    case 'PAY_REQUEST':\r\n    return { ...state, loadingPay: true };\r\n    case 'PAY_SUCCESS':\r\n      return { ...state, loadingPay: false, successPay: true };\r\n    case 'PAY_FAIL':\r\n      return { ...state, loadingPay: false };\r\n    case 'PAY_RESET':\r\n      return { ...state, loadingPay: false, successPay: false };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst instance = axios.create({\r\n  baseUR: 'http://localhost:5000',\r\n});\r\n\r\nexport default function OrderScreen() {\r\n  const { state } = useContext(Store);\r\n  const { userInfo } = state;\r\n\r\n  const params = useParams();\r\n  const { id: orderId } = params;\r\n  const navigate = useNavigate();\r\n\r\n  const [{ loading, error, order, successPay, loadingPay }, dispatch] =\r\n    useReducer(reducer, {\r\n      loading: true,\r\n      order: {},\r\n      error: '',\r\n      successPay: false,\r\n      loadingPay: false,\r\n    });\r\n\r\n  const [{ isPending }, paypalDispatch] = usePayPalScriptReducer();\r\n\r\n  function createOrder(data, actions) {\r\n    const usdAmount = (order.totalPrice / 24000).toFixed(2);\r\n    return actions.order\r\n      .create({\r\n        purchase_units: [\r\n          {\r\n            amount: { currency_code: 'USD',\r\n            value: usdAmount, },\r\n          },\r\n        ],\r\n      })\r\n      .then((orderID) => {\r\n        return orderID;\r\n      });\r\n  }\r\n\r\n  function onApprove(data, actions) {\r\n    return actions.order.capture().then(async function (details) {\r\n      try {\r\n        dispatch({ type: 'PAY_REQUEST' });\r\n        const { data } = await axios.put(\r\n          `/api/orders/${order._id}/pay`,\r\n          details,\r\n          {\r\n            headers: { authorization: `Bearer ${userInfo.token}` },\r\n          }\r\n        );\r\n        dispatch({ type: 'PAY_SUCCESS', payload: data });\r\n        toast.success('Thanh toán thành công');\r\n      } catch (err) {\r\n        dispatch({ type: 'PAY_FAIL', payload: getError(err) });\r\n        toast.error(getError(err));\r\n      }\r\n    });\r\n  }\r\n  function onError(err) {\r\n    toast.error(getError(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    \r\n\r\n     // Create a URLSearchParams object\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  \r\n  // Use the .get method to get the value of `vnp_ResponseCode`\r\n  const vnpResponseCode = urlParams.get('vnp_ResponseCode');\r\n  \r\n  // Log the value\r\n  console.log('vnp_ResponseCode:', vnpResponseCode);\r\n\r\n  if (!order._id || vnpResponseCode === '00') {\r\n    // Payment successful, update the order status\r\n    axios.put(\r\n      `/api/orders/${order._id}/pay`, \r\n      {\r\n        id: urlParams.get('vnp_TransactionNo'),\r\n        status: 'COMPLETED',\r\n        update_time: new Date().toISOString(),\r\n      },\r\n      {\r\n        headers: { authorization: `Bearer ${userInfo.token}` },\r\n      }\r\n    )\r\n    .then(() => {\r\n      toast.success('Thanh toán thành công');\r\n      // Refresh the order details\r\n      fetchOrder();\r\n      window.history.replaceState({}, document.title, window.location.pathname);\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error updating order status:', error);\r\n    });\r\n  }\r\n\r\n    const fetchOrder = async () => {\r\n      try {\r\n        dispatch({ type: 'FETCH_REQUEST' });\r\n        const { data } = await axios.get(`/api/orders/${orderId}`, {\r\n          headers: { authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      } catch (err) {\r\n        dispatch({ type: 'FETCH_FAIL', payload: getError(err) });\r\n      }\r\n    };\r\n\r\n    if (!userInfo) {\r\n      return navigate('/login');\r\n    }\r\n    if (!order._id || successPay || (order._id && order._id !== orderId)) {\r\n      fetchOrder();\r\n      if (successPay) {\r\n        dispatch({ type: 'PAY_RESET' });\r\n      }\r\n    } else {\r\n      const loadPaypalScript = async () => {\r\n        const { data: clientId } = await axios.get('/api/keys/paypal', {\r\n          headers: { authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        paypalDispatch({\r\n          type: 'resetOptions',\r\n          value: {\r\n            'client-id': clientId,\r\n            currency: 'USD',\r\n          },\r\n        });\r\n        paypalDispatch({ type: 'setLoadingStatus', value: 'pending' });\r\n      };\r\n      loadPaypalScript();\r\n    }\r\n  }, [order, userInfo, orderId, navigate, paypalDispatch, successPay]);\r\n\r\n  function onVnpayClick() {\r\n    const returnUrl = `http://localhost:3000/order/${order._id}`\r\n\r\n    instance.get('/api/vnpayRouter/create_payment_url', {\r\n      params: {\r\n        amount: order.totalPrice, // Set the amount as order.totalPrice\r\n        returnUrl,\r\n      },\r\n    }).then((response) => {\r\n      // Redirect the browser to the VNPAY URL after receiving the response\r\n      window.location.href = response.data.url;\r\n    }).catch((error) => {\r\n      console.error('Error fetching VNPAY URL', error);\r\n    });\r\n  }\r\n  return loading ? (\r\n    <LoadingBox></LoadingBox>\r\n  ) : error ? (\r\n    <MessageBox variant=\"danger\">{error}</MessageBox>\r\n  ) : (\r\n    <div>\r\n      <Helmet>\r\n        <title>Đơn hàng {orderId}</title>\r\n      </Helmet>\r\n      <h1 className=\"my-3\">Đơn hàng {orderId}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <Card className=\"mb-3\">\r\n            <Card.Body>\r\n              <Card.Title>Địa chỉ nhận hàng</Card.Title>\r\n              <Card.Text>\r\n                <strong>Họ và tên:</strong> {order.shippingAddress.fullName} <br />\r\n                <strong>Số điện thoại:</strong> {order.shippingAddress.phoneNumber} <br />\r\n                <strong>Địa chỉ: </strong> {order.shippingAddress.address}, {order.shippingAddress.district},\r\n                {order.shippingAddress.city}, \r\n              </Card.Text>\r\n              {order.isDelivered ? (\r\n                <MessageBox variant=\"success\">\r\n                  Giao tại {order.deliveredAt}\r\n                </MessageBox>\r\n              ) : (\r\n                <MessageBox variant=\"danger\">Chưa được giao</MessageBox>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n          <Card className=\"mb-3\">\r\n            <Card.Body>\r\n              <Card.Title>Thanh toán</Card.Title>\r\n\r\n              {order.isPaid ? (\r\n                <MessageBox variant=\"success\">\r\n                  Đã thanh toán {order.paidAt}\r\n                </MessageBox>\r\n              ) : (\r\n                <MessageBox variant=\"danger\">Chưa thanh toán</MessageBox>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Card className=\"mb-3\">\r\n            <Card.Body>\r\n              <Card.Title>Sản phẩm</Card.Title>\r\n              <ListGroup variant=\"flush\">\r\n                {order.orderItems.map((item) => (\r\n                  <ListGroup.Item key={item._id}>\r\n                    <Row className=\"align-items-center\">\r\n                      <Col md={6}>\r\n                        <img\r\n                          src={item.image}\r\n                          alt={item.name}\r\n                          className=\"img-fluid rounded img-thumbnail\"\r\n                        ></img>{' '}\r\n                        <Link to={`/product/${item.slug}`}>{item.name}</Link>\r\n                      </Col>\r\n                      <Col md={3}>\r\n                        <span>{item.quantity}</span>\r\n                      </Col>\r\n                      <Col md={3}>{item.price}đ</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card className=\"mb-3\">\r\n            <Card.Body>\r\n              <Card.Title>Đơn hàng</Card.Title>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Sản phẩm</Col>\r\n                    <Col>{order.itemsPrice.toFixed(2)}đ</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Phí vận chuyển</Col>\r\n                    <Col>{order.shippingPrice.toFixed(2)}đ</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Thuế</Col>\r\n                    <Col>{order.taxPrice.toFixed(2)}đ</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>\r\n                      <strong> Giá trị đơn hàng</strong>\r\n                    </Col>\r\n                    <Col>\r\n                      <strong>{order.totalPrice.toFixed(2)}đ</strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                {!order.isPaid && (\r\n                  <ListGroup.Item>\r\n                    {isPending ? (\r\n                      <LoadingBox />\r\n                    ) : (\r\n                      <div>\r\n                        <PayPalButtons\r\n                          createOrder={createOrder}\r\n                          onApprove={onApprove}\r\n                          onError={onError}\r\n                        ></PayPalButtons>\r\n                      </div>\r\n                    )}\r\n                    {loadingPay && <LoadingBox></LoadingBox>}\r\n                    <div>\r\n                      <button className=\"vnpay-button-style\" onClick={onVnpayClick}>\r\n                        VNPAY\r\n                      </button>\r\n                    </div>\r\n                  </ListGroup.Item>\r\n                )}\r\n              </ListGroup>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\services\\ghtk.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\OrderHistoryScreen.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\ProfileScreen.js",["121","122"],"import React, { useContext, useReducer, useState } from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Store } from '../store';\r\nimport { toast } from 'react-toastify';\r\nimport { getError } from '../utils';\r\nimport axios from 'axios';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'UPDATE_REQUEST':\r\n      return { ...state, loadingUpdate: true };\r\n    case 'UPDATE_SUCCESS':\r\n      return { ...state, loadingUpdate: false };\r\n    case 'UPDATE_FAIL':\r\n      return { ...state, loadingUpdate: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function ProfileScreen() {\r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n  const { userInfo } = state;\r\n  const [name, setName] = useState(userInfo.name);\r\n  const [email, setEmail] = useState(userInfo.email);\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const [{ loadingUpdate }, dispatch] = useReducer(reducer, {\r\n    loadingUpdate: false,\r\n  });\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { data } = await axios.put(\r\n        '/api/users/profile',\r\n        {\r\n          name,\r\n          email,\r\n          password,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n      dispatch({\r\n        type: 'UPDATE_SUCCESS',\r\n      });\r\n      ctxDispatch({ type: 'USER_SIGNIN', payload: data });\r\n      localStorage.setItem('userInfo', JSON.stringify(data));\r\n      toast.success('User updated successfully');\r\n    } catch (err) {\r\n      dispatch({\r\n        type: 'FETCH_FAIL',\r\n      });\r\n      toast.error(getError(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container small-container\">\r\n      <Helmet>\r\n        <title>Thông tin tài khoản</title>\r\n      </Helmet>\r\n      <h1 className=\"my-3\">Thông tin tài khoản</h1>\r\n      <form onSubmit={submitHandler}>\r\n        <Form.Group className=\"mb-3\" controlId=\"name\">\r\n          <Form.Label>Tên người dùng</Form.Label>\r\n          <Form.Control\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"name\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"password\">\r\n          <Form.Label>Nhập mật khẩu mới</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"password\">\r\n          <Form.Label>Xác nhận mật khẩu mới</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <div className=\"mb-3\">\r\n          <Button type=\"submit\">Cập nhật thông tin</Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}","D:\\TMDT\\GreenLifeWebsite\\fe\\src\\components\\ChatBot.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\components\\SearchBox.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\SearchScreen.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\components\\ProtectedRoute.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\screens\\DashboardScreen.js",[],"D:\\TMDT\\GreenLifeWebsite\\fe\\src\\components\\AdminRoute.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":2,"column":52,"nodeType":"129","messageId":"130","endLine":2,"endColumn":60},{"ruleId":"127","severity":1,"message":"131","line":30,"column":10,"nodeType":"129","messageId":"130","endLine":30,"endColumn":25},{"ruleId":"127","severity":1,"message":"132","line":32,"column":12,"nodeType":"129","messageId":"130","endLine":32,"endColumn":25},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'confirmPassword' is assigned a value but never used.","'loadingUpdate' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]